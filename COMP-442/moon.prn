MOON listing of output.m.

    1     0 fibonnacci474618842	sw	12(R1), R2	% 
    2     4 	lw	R15, -16(R1)	% *(R1(STACK_POINTER) + -16)
    3     8 	bz	R15, else_1	% 
    4    12 	lw	R4, -16(R1)	% *(R1(STACK_POINTER) + -16)
    5    16 	subi	R4, R4, 1	% (*(R1(STACK_POINTER) + ((0 + 0) - comp442.semantic.expressions.VariableExpressionFragment$1@326cbb2d)) - 1)
    6    20 	sw	0(R1), R4	% 
    7    24 	lw	R8, -12(R1)	% *(R1(STACK_POINTER) + -12)
    8    28 	lw	R11, -8(R1)	% *(R1(STACK_POINTER) + -8)
    9    32 	add	R8, R8, R11	% (*(R1(STACK_POINTER) + ((0 + 4) - comp442.semantic.expressions.VariableExpressionFragment$1@1f31cd12)) + *(R1(STACK_POINTER) + ((0 + 8) - comp442.semantic.expressions.VariableExpressionFragment$1@7e8e68bd)))
   10    36 	sw	4(R1), R8	% 
   11    40 	lw	R11, -12(R1)	% *(R1(STACK_POINTER) + -12)
   12    44 	sw	8(R1), R11	% 
   13    48 	addi	R1, R1, 16	% 
   14    52 	jl	R2, fibonnacci474618842	% 
   15    56 	add	R2, R0, R2	% 
   16    60 	j	endif_1	% 
   17    64 else_1	lw	R14, -8(R1)	% *(R1(STACK_POINTER) + -8)
   18    68 	add	R2, R0, R14	% 
   19    72 endif_1	nop	% 
   20    76 	lw	R7, 12(R1)	% 
   21    80 	addi	R1, R1, -16	% 
   22    84 	jr	R7	% 
   23    88 	entry	% 
   24    88 	addi	R1, R0, stack	% 
   25    92 	addi	R1, R1, 4	% 
   26    96 	addi	R15, R0, 10	% 
   27   100 	sw	0(R1), R15	% 
   28   104 	addi	R4, R0, 1	% 
   29   108 	sw	4(R1), R4	% 
   30   112 	addi	R8, R0, 0	% 
   31   116 	sw	8(R1), R8	% 
   32   120 	addi	R1, R1, 16	% 
   33   124 	jl	R2, fibonnacci474618842	% 
   34   128 	sw	-4(R1), R2	% 
   35   132 	hlt	% 
   36   136 stack	align	% 

